<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Supporting Regular Expression Testing, Search, Repair, Comprehension, and Maintenance</AwardTitle>
<AwardEffectiveDate>08/15/2017</AwardEffectiveDate>
<AwardExpirationDate>07/31/2020</AwardExpirationDate>
<AwardAmount>499996</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol J. Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>In software development, regular expressions are a common programming construct used for many purposes, including querying databases, searching documents, validating user input, and parsing files. Most programming languages have standard libraries or built-in support for regular expression processing. Despite their frequent appearance in software development activities, regular expressions are prone to programming errors. When a regular expression is responsible for a software bug, the impact can be severe, possibly resulting in corrupted data, security vulnerabilities, denial of service attacks, or website outages. This research develops new techniques to test, understand, reuse, and maintain regular expressions, in an effort to improve developer comprehension and reduce related bugs.&lt;br/&gt;&lt;br/&gt;The approach is to develop coverage criteria for test suites, similarity metrics, and semantics-preserving transformations for regular expressions. The coverage criteria apply to the automata representation of the regular expression and are used to automatically generate test inputs to help developers adequately test regular expressions. The similarity metrics allow developers to find regular expressions that are similar to a buggy regular expression, as well as explain how the behavior differs among them. The semantics-preserving transformations enhance comprehension and maintenance, and also support the migration of regular expressions between languages.  The broader impacts come primarily from the goal of reducing bugs related to regular expressions, which creates more reliable software for all.</AbstractNarration>
<MinAmdLetterDate>08/10/2017</MinAmdLetterDate>
<MaxAmdLetterDate>08/10/2017</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1714699</AwardID>
<Investigator>
<FirstName>Kathryn</FirstName>
<LastName>Stolee</LastName>
<EmailAddress>ktstolee@ncsu.edu</EmailAddress>
<StartDate>08/10/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Carolina State University</Name>
<CityName>RALEIGH</CityName>
<ZipCode>276957514</ZipCode>
<PhoneNumber>9195152444</PhoneNumber>
<StreetAddress>CAMPUS BOX 7514</StreetAddress>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
</Award>
</rootTag>
