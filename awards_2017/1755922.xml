<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CRII: SHF: Supporting Domain-Specific Inquiry with Rule-Based Modeling</AwardTitle>
<AwardEffectiveDate>03/01/2018</AwardEffectiveDate>
<AwardExpirationDate>02/29/2020</AwardExpirationDate>
<AwardAmount>161142</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sol J. Greenspan</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Writing computer simulations of processes such as ecologies, economic models, social dynamics, government procedures, and biological regulation, can lead to greater understanding of these systems for novices and experts alive. Rule-based modeling allows novice programmers to specify and run these simulations without training in probability theory or traditional programming languages. The proposed work extends a rule-based modeling language to support self-directed learning of the language and domain-specific inquiry about the models. In the long term, this work will enable cross-communication between experts in different domains and will broaden participation in systems thinking skills applicable across STEM disciplines.&lt;br/&gt;&lt;br/&gt;The underlying rule-based language, Ceptre, is based on a fragment of linear logic, enabling compositional reasoning about programs. The proposed work entails developing a structure editor for Ceptre designed to support the key principles of discoverability, supporting new users to learn the language in a self-directed manner, and correctness-by-construction, or the prevention of syntax errors through an editing interface that maps between only meaningful edit states. This part of the project will be rigorously validated with formal proofs of soundness and completeness of the editing interface with respect to the underlying language. The domain-specific inquiry component of the project will be accomplished by developing a language and algorithms to support queries and filters on simulation states, "Why" questions about program traces, statistical analysis on sets of traces, and other means of understanding the emergent behavior of simulations. These tools will be evaluated through user studies on populations of domain experts and programming novices.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>01/18/2018</MinAmdLetterDate>
<MaxAmdLetterDate>01/18/2018</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1755922</AwardID>
<Investigator>
<FirstName>Christopher</FirstName>
<LastName>Martens</LastName>
<EmailAddress>crmarten@ncsu.edu</EmailAddress>
<StartDate>01/18/2018</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>North Carolina State University</Name>
<CityName>RALEIGH</CityName>
<ZipCode>276957514</ZipCode>
<PhoneNumber>9195152444</PhoneNumber>
<StreetAddress>CAMPUS BOX 7514</StreetAddress>
<CountryName>United States</CountryName>
<StateName>North Carolina</StateName>
<StateCode>NC</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>7944</Code>
<Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
</ProgramReference>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
</Award>
</rootTag>
