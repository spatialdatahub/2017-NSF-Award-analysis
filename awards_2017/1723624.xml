<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>CAPA: Collaborative Research: Lightweight Abstract Memory Features</AwardTitle>
<AwardEffectiveDate>09/01/2017</AwardEffectiveDate>
<AwardExpirationDate>08/31/2020</AwardExpirationDate>
<AwardAmount>166667</AwardAmount>
<AwardInstrument>
<Value>Continuing grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
</ProgramOfficer>
<AbstractNarration>The memory subsystem of modern computing systems has seen tremendous innovations, incorporating new features to aid programmers in creating fast, secure, correct, and power-efficient software.  Unfortunately, harnessing these features is a challenge, as programming languages do not expose advanced abilities of the memory subsystem to programmers.  This project focuses on the interface between programming languages and memory hardware. The intellectual merits include the creation of a rigorous semantics for memory features, so that programmers can reason about individual features and their composition; and the creation of compilation tools and run-time systems that allow programmers to use new memory features, in isolation or combination, for maximum gain.  The project's broader significance and importance are its impact on the software and hardware industry, by facilitating rapid adoption of new memory features; the education and training of graduate students; and the creation of a tutorial to aid in dissemination and adoption of the developed tools and techniques.&lt;br/&gt;&lt;br/&gt;Hardware implementations of memory features are typically fast but limited by physical capacity, and the precise semantics of features are often vendor-specific.  The theoretical portion of the work will create rigorous semantics for memory features, which transcend individual implementation and allow programmers and static analysis tools to reason about a program's interaction with memory.  The research will construct virtualized run-time systems to overcome hardware constraints, and to emulate features when they are not present.  Its implementations will employ run-time adaptivity to fine-tune themselves to a given system's feature availability, support for composition of features, and hardware/workload characteristics.  A custom compiler infrastructure, built atop the LLVM system, will provide a lightweight syntax through which programmers can easily add support for memory features to their existing codes.</AbstractNarration>
<MinAmdLetterDate>08/31/2017</MinAmdLetterDate>
<MaxAmdLetterDate>08/31/2017</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1723624</AwardID>
<Investigator>
<FirstName>Michael</FirstName>
<LastName>Spear</LastName>
<EmailAddress>spear@cse.lehigh.edu</EmailAddress>
<StartDate>08/31/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Xiaochen</FirstName>
<LastName>Guo</LastName>
<EmailAddress>xig515@lehigh.edu</EmailAddress>
<StartDate>08/31/2017</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Lehigh University</Name>
<CityName>Bethlehem</CityName>
<ZipCode>180153005</ZipCode>
<PhoneNumber>6107583021</PhoneNumber>
<StreetAddress>Alumni Building 27</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Pennsylvania</StateName>
<StateCode>PA</StateCode>
</Institution>
<ProgramElement>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramElement>
<ProgramReference>
<Code>021Z</Code>
<Text>Industry Partnerships</Text>
</ProgramReference>
<ProgramReference>
<Code>026Z</Code>
<Text>NSCI: National Strategic Computing Initi</Text>
</ProgramReference>
<ProgramReference>
<Code>7798</Code>
<Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<ProgramReference>
<Code>8585</Code>
<Text>NSF/Intel Partnership Projects</Text>
</ProgramReference>
</Award>
</rootTag>
