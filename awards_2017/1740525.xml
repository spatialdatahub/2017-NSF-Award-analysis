<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: Graphs and structures for distance estimation</AwardTitle>
<AwardEffectiveDate>01/20/2017</AwardEffectiveDate>
<AwardExpirationDate>08/31/2019</AwardExpirationDate>
<AwardAmount>219028</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Tracy J. Kimbrel</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Distance computation and estimation in networks is one of the most basic and fundamental tasks in network analysis. However, storing the distance between every pair of nodes of a graph is infeasible, especially for today's "big data." Small sketches of a graph have been developed so that a good estimate of any pairwise distance can be retrieved from the sketch. This project aims to advance the state-of-the art of such sketches. The main objects of study are spanners, distance oracles and their fault-tolerant variants. A spanner is a sparse subgraph that does not stretch any distance of the original graph by much.Â  A distance oracle is a data structure that has small space usage and is capable of answering (approximate) distance queries efficiently. Both spanners and distance oracles compress the distance information. The main difference between them is that one can still run graph algorithms on a spanner, but not on a distance oracle, whereas one can obtain any distance from a distance oracle instantly, but in a spanner one would have to actually compute it.&lt;br/&gt;&lt;br/&gt;In practice, networks are dynamic in nature. To address this, graph sketches would have to tolerate faults, i.e. edge and vertex deletions. There are fault-tolerant versions of spanners and distance oracles-- these structures estimate distances for any given (typically fixed size) subset of failed edges or nodes. This project will provide algorithms for constructing new low-space spanners and oracles with improved guarantees and will strive to develop new techniques for fault-tolerance and distance estimation in general. Spanners and distance oracles have many applications, e.g. in parallel and distributed algorithms for distance computation, network routing, and simulating synchronized protocols in unsynchronized networks. A better understanding of network routing along short paths could guide the design of next-generation Internet protocols. The research is also closely tied to the field of metric embedding, and thus extends beyond the strict boundaries of computer science. Material from this research will be integrated into core undergraduate and graduate courses, and will lead to the development of new courses on the topic. The lecture notes and project materials will be available on the course website for the general public.</AbstractNarration>
<MinAmdLetterDate>05/30/2017</MinAmdLetterDate>
<MaxAmdLetterDate>05/30/2017</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1740525</AwardID>
<Investigator>
<FirstName>Virginia</FirstName>
<LastName>Williams</LastName>
<EmailAddress>virgi@mit.edu</EmailAddress>
<StartDate>05/30/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Massachusetts Institute of Technology</Name>
<CityName>Cambridge</CityName>
<ZipCode>021394301</ZipCode>
<PhoneNumber>6172531000</PhoneNumber>
<StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Massachusetts</StateName>
<StateCode>MA</StateCode>
</Institution>
<ProgramElement>
<Code>7796</Code>
<Text>ALGORITHMIC FOUNDATIONS</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>9102</Code>
<Text>WOMEN, MINORITY, DISABLED, NEC</Text>
</ProgramReference>
</Award>
</rootTag>
