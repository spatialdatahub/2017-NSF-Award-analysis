<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SaTC: CORE: Small: Efficient Hardware-Aware and Hardware-Enabled Algorithms for Secure In-Memory Databases</AwardTitle>
<AwardEffectiveDate>09/01/2017</AwardEffectiveDate>
<AwardExpirationDate>08/31/2020</AwardExpirationDate>
<AwardAmount>532000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Sandip Kundu</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Many big-data workloads are hosted on the cloud to facilitate sharing and low cost.  Many of these workloads deal with sensitive data, e.g., electronic health records.  Cloud infrastructures are vulnerable to attacks from untrusted operators with physical access to the computers.  These attacks can take many forms and may compromise privacy or integrity.  To guarantee the security of sensitive data and ensure the cost-effectiveness of shared cyberinfrastructure, it is vital that these attacks be thwarted while not incurring a significant penalty in terms of performance, energy, or cost.&lt;br/&gt;&lt;br/&gt;Currently, the above attacks are thwarted with oblivious RAM (ORAM) and integrity trees.  These solutions incur significant bandwidth and capacity overheads and can degrade performance by 1-2 orders of magnitude.  These solutions also show different behaviors on different workloads, i.e., one cannot ignore system, hardware, and workload effects when evaluating algorithms for security.  To address these problems, the PIs are designing novel secure hardware, and leveraging commodity secure hardware to design novel secure systems. The PIs are developing new secure algorithms that require hardware/software co-design because their behavior is a function of workload locality properties and hardware constraints, e.g., a distributed implementation of ORAM enabled by custom memory modules. These new algorithms are being integrated into scalable in-memory database systems that run on a cluster of state-of-the-art secure nodes.  The project is thus attempting to secure cyberinfrastructure for sensitive applications, moving well-known approaches (ORAM and integrity trees) into the practical realm.  The PIs are also continuing their outreach and education efforts.</AbstractNarration>
<MinAmdLetterDate>08/17/2017</MinAmdLetterDate>
<MaxAmdLetterDate>03/20/2018</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>1718834</AwardID>
<Investigator>
<FirstName>Rajeev</FirstName>
<LastName>Balasubramonian</LastName>
<EmailAddress>rajeev@cs.utah.edu</EmailAddress>
<StartDate>08/17/2017</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Feifei</FirstName>
<LastName>Li</LastName>
<EmailAddress>lifeifei@cs.utah.edu</EmailAddress>
<StartDate>08/17/2017</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>University of Utah</Name>
<CityName>SALT LAKE CITY</CityName>
<ZipCode>841128930</ZipCode>
<PhoneNumber>8015816903</PhoneNumber>
<StreetAddress>75 S 2000 E</StreetAddress>
<CountryName>United States</CountryName>
<StateName>Utah</StateName>
<StateCode>UT</StateCode>
</Institution>
<ProgramElement>
<Code>1714</Code>
<Text>SPECIAL PROJECTS - CISE</Text>
</ProgramElement>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>7434</Code>
<Text>CNCI</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>9178</Code>
<Text>UNDERGRADUATE EDUCATION</Text>
</ProgramReference>
<ProgramReference>
<Code>9251</Code>
<Text>RES EXPER FOR UNDERGRAD-SUPPLT</Text>
</ProgramReference>
</Award>
</rootTag>
